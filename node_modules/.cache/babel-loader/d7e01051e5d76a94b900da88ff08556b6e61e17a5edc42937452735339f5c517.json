{"ast":null,"code":"var _jsxFileName = \"/Users/nakaharakenta/Desktop/HP/ portfolio/src/components/product/twitterClone/src/components/timeline/TweetBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './TweetBox.css';\nimport { collection, addDoc, serverTimestamp } from \"firebase/firestore\";\nimport db from \"../../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TweetBox() {\n  _s();\n  const [tweetMessage, setTweetMesage] = useState(\"\"); //ボタン押下時にforebaseに追加するメッセージ\n  const [tweetImage, setTweetImage] = useState(\"\"); //ボタン押下時にforebaseに追加するイメージ\n\n  const sendTweet = e => {\n    //ツイートボタン押下で起動\n    //fifrebaseのデータベースにデータを追加する\n    e.preventDefault(); //ツイートボタン押下時にレンダリングされないようにする\n    addDoc(collection(db, \"posts\"), {\n      displayName: \"プログラミングチュートリアル\",\n      username: \"testUser\",\n      verified: true,\n      text: tweetMessage,\n      avatar: \"https://shincode.info/wp-content/uploads/2021/12/icon.png\",\n      image: tweetImage,\n      timestamp: serverTimestamp() //投稿時刻の取得\n    });\n\n    setTweetMesage(\"\");\n    setTweetImage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tweetBox\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweetBox-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa-solid fa-user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u4ECA\\u3069\\u3046\\u3057\\u3066\\u308B\",\n          type: \"text\",\n          value: tweetMessage //valueは中身だからボタン押下時のnull値をここであたはめる\n          ,\n          onChange: event => setTweetMesage(event.target.value) //inputの入力内容をsetTweetMasageする\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"tweetBox-imageInput\",\n        placeholder: \"\\u753B\\u50CF\\u306EURL\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\",\n        type: \"text\",\n        value: tweetImage,\n        onChange: event => setTweetImage(event.target.value) //inputの入力内容をsetTweetImageする\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"tweetBox-tweetButton\",\n        type: \"submit\",\n        onClick: sendTweet,\n        children: \"\\u30C4\\u30A4\\u30FC\\u30C8\\u3059\\u308B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(TweetBox, \"nzYQrujTBgjSnV/vg3VQxaQO9ls=\");\n_c = TweetBox;\nexport default TweetBox;\nvar _c;\n$RefreshReg$(_c, \"TweetBox\");","map":{"version":3,"names":["React","useState","collection","addDoc","serverTimestamp","db","jsxDEV","_jsxDEV","TweetBox","_s","tweetMessage","setTweetMesage","tweetImage","setTweetImage","sendTweet","e","preventDefault","displayName","username","verified","text","avatar","image","timestamp","className","children","class","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","value","onChange","event","target","onClick","_c","$RefreshReg$"],"sources":["/Users/nakaharakenta/Desktop/HP/ portfolio/src/components/product/twitterClone/src/components/timeline/TweetBox.js"],"sourcesContent":["import React, { useState } from 'react' \nimport './TweetBox.css'\nimport {collection,addDoc, serverTimestamp}from \"firebase/firestore\"; \nimport db from \"../../firebase\"\n\n\n\nfunction TweetBox() {\nconst [tweetMessage,setTweetMesage]=useState(\"\");//ボタン押下時にforebaseに追加するメッセージ\nconst [tweetImage,setTweetImage]=useState(\"\");//ボタン押下時にforebaseに追加するイメージ\n\n\n\n\n\nconst sendTweet = (e) =>{//ツイートボタン押下で起動\n  //fifrebaseのデータベースにデータを追加する\ne.preventDefault();//ツイートボタン押下時にレンダリングされないようにする\naddDoc(collection(db, \"posts\"),{\n  displayName:\"プログラミングチュートリアル\",\n  username:\"testUser\",\n  verified:true,\n  text:tweetMessage,\n  avatar:\"https://shincode.info/wp-content/uploads/2021/12/icon.png\",\n  image:tweetImage,\n  timestamp:serverTimestamp(),//投稿時刻の取得\n});\n\nsetTweetMesage(\"\");\nsetTweetImage(\"\");\n};\n\n\n  return (\n    <div className=\"tweetBox\">\n        <form>\n            <div className=\"tweetBox-input\">\n        <i class=\"fa-solid fa-user\"></i>\n        <input placeholder=\"今どうしてる\" type=\"text\" value={tweetMessage}//valueは中身だからボタン押下時のnull値をここであたはめる\n        onChange={(event)=> setTweetMesage(event.target.value)}//inputの入力内容をsetTweetMasageする\n        ></input>\n        </div>\n        <input \n        className=\"tweetBox-imageInput\" placeholder=\"画像のURLを入力してください\" type=\"text\"　value={tweetImage}\n        onChange={(event)=> setTweetImage(event.target.value)}//inputの入力内容をsetTweetImageする\n        >\n\n        </input>\n        <button className=\"tweetBox-tweetButton\" type=\"submit\" onClick={sendTweet}>ツイートする</button>\n        </form>\n        </div>\n  )\n}\n\nexport default TweetBox"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB;AACvB,SAAQC,UAAU,EAACC,MAAM,EAAEC,eAAe,QAAM,oBAAoB;AACpE,OAAOC,EAAE,MAAM,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAI/B,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,YAAY,EAACC,cAAc,CAAC,GAACV,QAAQ,CAAC,EAAE,CAAC,CAAC;EACjD,MAAM,CAACW,UAAU,EAACC,aAAa,CAAC,GAACZ,QAAQ,CAAC,EAAE,CAAC,CAAC;;EAM9C,MAAMa,SAAS,GAAIC,CAAC,IAAI;IAAC;IACvB;IACFA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC;IACnBb,MAAM,CAACD,UAAU,CAACG,EAAE,EAAE,OAAO,CAAC,EAAC;MAC7BY,WAAW,EAAC,gBAAgB;MAC5BC,QAAQ,EAAC,UAAU;MACnBC,QAAQ,EAAC,IAAI;MACbC,IAAI,EAACV,YAAY;MACjBW,MAAM,EAAC,2DAA2D;MAClEC,KAAK,EAACV,UAAU;MAChBW,SAAS,EAACnB,eAAe,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC;;IAEFO,cAAc,CAAC,EAAE,CAAC;IAClBE,aAAa,CAAC,EAAE,CAAC;EACjB,CAAC;EAGC,oBACEN,OAAA;IAAKiB,SAAS,EAAC,UAAU;IAAAC,QAAA,eACrBlB,OAAA;MAAAkB,QAAA,gBACIlB,OAAA;QAAKiB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBACnClB,OAAA;UAAGmB,KAAK,EAAC;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChCvB,OAAA;UAAOwB,WAAW,EAAC,sCAAQ;UAACC,IAAI,EAAC,MAAM;UAACC,KAAK,EAAEvB,YAAa;UAAA;UAC5DwB,QAAQ,EAAGC,KAAK,IAAIxB,cAAc,CAACwB,KAAK,CAACC,MAAM,CAACH,KAAK,CAAE;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACNvB,OAAA;QACAiB,SAAS,EAAC,qBAAqB;QAACO,WAAW,EAAC,6EAAiB;QAACC,IAAI,EAAC,MAAM;QAACC,KAAK,EAAErB,UAAW;QAC5FsB,QAAQ,EAAGC,KAAK,IAAItB,aAAa,CAACsB,KAAK,CAACC,MAAM,CAACH,KAAK,CAAE;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAG/C,CAAC,eACRvB,OAAA;QAAQiB,SAAS,EAAC,sBAAsB;QAACQ,IAAI,EAAC,QAAQ;QAACK,OAAO,EAAEvB,SAAU;QAAAW,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEd;AAACrB,EAAA,CA7CQD,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AA+CjB,eAAeA,QAAQ;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}